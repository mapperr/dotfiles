set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'altercation/vim-colors-solarized'
" Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'junegunn/fzf'
" Plugin 'scrooloose/nerdtree'
Plugin 'lokaltog/neoranger'
Plugin 'scrooloose/syntastic'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'majutsushi/tagbar'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-repeat'
Plugin 'vim-airline'
" tools
Plugin 'tpope/vim-dadbod'

" IDE
Plugin 'ludovicchabant/vim-gutentags'
Plugin 'shougo/deoplete.nvim'
" Plugin 'quramy/tsuquyomi'

" syntax
Plugin 'sheerun/vim-polyglot'
Plugin 'leafgarland/typescript-vim'
Plugin 'pprovost/vim-ps1'
Plugin 'hashivim/vim-terraform'
Plugin 'tpope/vim-markdown'

" formatting
Plugin 'Chiel92/vim-autoformat'


call vundle#end()            " required
filetype plugin indent on    " required

" jump to matching html/xml tags
" https://vi.stackexchange.com/a/784
runtime macros/matchit.vim


if &term =~ '256color'
    " disable Background Color Erase (BCE) so that color schemes
    " render properly when inside 256-color tmux and GNU screen.
    " see also http://sunaku.github.io/vim-256color-bce.html
    set t_ut=
endif

let g:solarized_termcolors=256
syntax enable
set background=dark
colorscheme solarized

set clipboard+=unnamedplus

set cursorline
set nowrap
set noautoindent
set nosmartindent
set noexpandtab
set paste
set number
" tab as 4 spaces
" https://stackoverflow.com/a/1878983/1407614
set tabstop=4 softtabstop=0 expandtab shiftwidth=4 smarttab

" NERDTree
" map <F2> :NERDTreeToggle<CR>

" neoranger
" https://vimawesome.com/plugin/neoranger
" Open ranger at current file with "-"
" nnoremap <silent> - :RangerCurrentFile<CR>
map <F2> :RangerCurrentFile<CR>
" Open ranger in current working directory
nnoremap <silent> <Leader>r :Ranger<CR>

" NERDCommenter
" filetype plugin on

" tagbar
nmap <F3> :TagbarToggle<CR>
let g:tagbar_compact = 1
let g:tagbar_autofocus = 1
let g:tagbar_autoclose = 1

" AutoFormat
noremap <F4> :Autoformat<CR>

" wildignore (considered by ctrlp and, theoretically, gutentags. But gutentags seems to ignore it)
set wildignore+=*.so,*.swp,*.zip
set wildignore+=*/tmp/*,*/out/*,*/bin/*,*/obj/*,*/build/*,*/dist/*,*/node_modules/*,*/wwwroot/*,*/packages/*,*/.terraform/*

" ctrlp
" let g:ctrlp_custom_ignore = [ '' ]

" deoplete
let g:deoplete#enable_at_startup = 1

" syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_quiet_messages = { "type": "style" }

" fzf
nnoremap <Leader>f :call fzf#run({'source': 'fd .', 'sink': 'e'})<CR>
nnoremap <Leader>g :call fzf#run({'source': 'fd . `git rev-parse --show-toplevel`', 'sink': 'e'})<CR>
nnoremap <Leader>h :call fzf#run({'source': 'fd . ~', 'sink': 'e'})<CR>

" gutentags
let g:gutentags_ctags_tagfile = '.ctags'
let g:gutentags_ctags_exclude = [ 'out', 'bin', 'obj', 'build', 'dist', 'node_modules', 'wwwroot', 'packages', '.terraform' ]

" indent guides
let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=darkgrey  ctermbg=black
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=black  ctermbg=black
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_default_mapping = 1
let g:indent_guides_guide_size = 1
let g:indent_guides_start_level = 2
let g:indent_guides_color_change_percent = 10

